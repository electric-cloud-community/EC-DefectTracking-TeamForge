<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="generator" content=
  "HTML Tidy for Windows (vers 25 March 2009), see www.w3.org" />
  <meta content="text/html; charset=us-ascii" http-equiv=
  "content-type" />

  <title>ElectricFlow Plugin for @PLUGIN_KEY@</title>
  <link rel="stylesheet" href=
  "../../plugins/@PLUGIN_KEY@/pluginhelp.css" type="text/css"
  media="screen" />
</head>

<body>
  <div class="help">
    <h1>Teamforge</h1>

    <p>Plugin Version @PLUGIN_VERSION@</p>
    <hr style=
    "margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;"
    noshade="noshade" />
    <p>Revised on January 11, 2019</p>
    <!-- The tool description should answer these kinds of questions:
    What is the tool itself is used for in the development
    process? Who would use this tool? What is the general use-case or
    problem that this tool solves? Look at the tool's documentation or
    website(s) to get their own descriptions. Look at Wikipedia or other
    outside websites. If there is a Hudson plugin, read their
    documentation for ideas, examples, etc. It's OK to copy word-for-word
    only if appropriate, such as FOSS - but not commercial software.
    -->

    <p>The platform radically simplifies management of software
    projects, by automating controls for commits, approvals and
    releases. You gain real-time visibility into project progress,
    documents and tracker artifacts, and ensure predictability with
    integrated and agile planning. Also, distributed teams
    collaborate closer and deliver faster with social coding.
    Provided by CollabNet, the founder of the Subversion project,
    TeamForge combines cost effectiveness with best-in-class
    security, scalability and automation.</p>

    <h2>TeamForge Links</h2>

    <p>More information can be found at <a href=
    "https://www.collab.net/products/teamforge">this
    website</a>.</p>

    <h2>ElectricFlow Integration to TeamForge</h2>
    <!-- The integration description should answer the questions:
    How deep does our integration go? Why should I care? What general
    functionality does the plugin include? What functionality does
    the plugin omit?
    -->

    <p>The EC-DefectTracking-TeamForge plugin enables you to
    create, update, and link TeamForge Server defects to an
    ElectricFlow job. The plugin also links to a new report that
    contains information from the TeamForge server about what was
    linked, updated, or created.</p>

    <h2>Notes</h2>

    <ul>
      <li>Access to the TeamForge server is required to use the
      plugin. This plugin relies on the TeamForge Perl API
      installed in the plugin.</li>
    </ul>

    <h2>Integrated Version</h2>

    <p>This plugin was developed and tested against version 5.0.0.0.
    - 5.4.0.0</p>

    <h1>Plugin Procedures</h1>
	<p>IMPORTANT: In the ElectricFlow UI, from the Home page, open the Main Menu, and click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>
    <p>IMPORTANT: For all parameter descriptions below, required
    parameters are shown in <span class='required'>bold
    italics</span>.</p>

    <div id="CreateConfiguration">
      <a name='CreateConfiguration' id="CreateConfiguration"></a>

      <h3>Plugin Configuration</h3>
      <!-- If the plugin has separate configurations then include this section,
    otherwise omit this whole section. We don't need to have a configuration
    section that just says "There is no configuration for this plugin."
    -->

      <p>
        Plugin configurations are sets of parameters that apply
        across some or all of the plugin's procedures. They are
        intended to reduce repetition of common values, create
        predefined sets of parameters for end users, and to
        securely store credentials where needed. Each configuration
        is given a unique name that is entered in designated
        parameters on procedures that use them.<br /><br />
        Plugin configurations are created by going to the ElectricFlow
         "Administration" tab, then to the "Defect
        Tracking" sub-tab.
      </p>
      <!-- For all parameters, the parameter name should be *exactly* the same as it appears in the
    Parameter Panel, and the first sentence(s) of the description should be
    the same as the tooltip (if there is one). After that, the parameter
    description can go into greater detail about the parameter including
    valid value ranges and examples.
    -->

      <table class="grid">
        <thead>
          <tr>
            <th>Parameter</th>

            <th>Description</th>
          </tr>
        </thead>

        <tbody>
          <tr>
            <td class='required'>Configuration Name</td>

            <td>Provide a unique name for the configuration,
            keeping in mind that you may need to create additional
            configurations over time. (Required)</td>
          </tr>

          <tr>
            <td>Description</td>

            <td>You can supply a text description for your
            reference only. ElectricFlow does not use this
            information.</td>
          </tr>

          <tr>
            <td class='required'>Host</td>

            <td>Provide the URL to use to connect to a TeamForge
            server. (Required)</td>
          </tr>

          <tr>
            <td class='required'>User Name</td>

            <td>Provide the user name to use to log in to the
            TeamForge server. (Required)</td>
          </tr>

          <tr>
            <td class='required'>Password and Retype Password</td>

            <td>Provide the password to use to log in to the
            TeamForge server. (Required)</td>
          </tr>
        </tbody>
      </table>
    </div>

    <div id="LinkDefects"><a name='LinkDefects' id=
    "LinkDefects"></a>

    <h3>Link Defects</h3>

    <p>This links existing defects to a job.</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your TeamForge Defect Tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td>Prefix</td>

          <td>Provide the key used by TeamForge as the prefix for
          defects within a project. If this field is blank, a
          regular expression is used to try to match defect
          IDs.</td>
        </tr>

        <tr>
          <td>Property To Parse</td>

          <td>Provide the property or propertysheet used to search
          for defect IDs. If this field is blank, the default
          property "/myJob/ecscm_changeLogs" is used.</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-02.png" alt=
    "" /></div>

    <div id="UpdateDefects"><a name='UpdateDefects' id=
    "UpdateDefects"></a>

    <h3>Update Defects</h3>

    <p>This enables defects associated with a job to be
    automatically updated in the TeamForge system. Defects are
    associated with a job if they are in a comma-separated list in
    a job property or parameter called "/myJob/defectsToUpdate".
    Updating a defect in the TeamForge system refers to changing
    its state to the state specified in
    "/myJob/defectsToUpdate".</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your TeamForge Defect Tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td class='required'>Property Path</td>

          <td>Provide the path to the property if the property
          containing the list of defects to update is somewhere
          other than "/myJob/defectsToUpdate". (Required)</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-03.png" alt=
    "" /></div>

    <div id="CreateDefects"><a name='CreateDefects' id=
    "CreateDefects"></a>

    <h3>Create Defects</h3>

    <p>This enables defect creation based on a test failure in an
    ElectricFlow job. Defects can be created automatically or
    manually. The Create Defects Procedure reads previously stored
    properties in order to create defects with proper values. The
    best way to store the properties is adding a postp matcher to
    the step that may fail. This is an example postp matcher
    (<a href=
    "../../plugins/EC-DefectTracking-TeamForge/PostP.txt">link</a>).</p>

    <table class="grid">
      <thead>
        <tr>
          <th>Parameter</th>

          <th>Description</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td class='required'>Configuration Name</td>

          <td>Provide the name of your TeamForge Defect Tracking
          configuration, or leave it blank to use the "default"
          configuration. (Required)</td>
        </tr>

        <tr>
          <td>Creation Mode</td>

          <td>Select Automatic if the defects should be created
          during job execution without user input. Select Manual to
          require a user to manually submit a defect from a Defect
          Report page linked to a Job Details page.</td>
        </tr>

        <tr>
          <td class='required'>Tracker ID Number</td>

          <td>The ID of the tracker where you want to create the
          defects. (Required)</td>
        </tr>
      </tbody>
    </table><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-04.png" alt=
    "" /></div>

    <h1>Examples and Use Cases</h1>
    <!-- This section is for examples and use cases, including screenshots of the new Parameter Panel with example values filled in.
    Unfortunately, I can't tell you what exactly to put here, but it's OK to put what seems like too much! Include both parameter
    values and output where appropriate. Use a separate 'h2' header for each example. Under the h2 header try to stay with the style
    outline used above where possible.
    -->

    <h2>New @PLUGIN_KEY@ Configuration</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-01.png" alt="" />

    <h2>Job Details and TeamForge Report Link</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-05.png" alt="" />

    <h2>TeamForge Report Example</h2><img src=
    "../../plugins/@PLUGIN_KEY@/images/TeamForge-06.png" alt="" />

    <h1>Release Notes</h1>
    <h2>@PLUGIN_KEY@-2.0.8</h2>
    <ul>
        <li>The plugin icon has been updated.</li>
    </ul>
    <h2>@PLUGIN_KEY@-2.0.7</h2>    <ul>        <li>Renamed ElectricCommander to ElectricFlow.</li>    </ul>    
    <h2>@PLUGIN_KEY@-2.0.6</h2>
    <ul>
        <li>Procedure name(s) were changed in the step picker section</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.5</h2>
    <!-- Specific descriptions of additional or changed functionality,
    new parameters, etc. The plugin version header of this section should
    include the speciic build number if possible. Repeat this section for
    each version.
    -->

    <ul>
      <li>Change Help page style.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.4</h2>

    <ul>
      <li>Fix Category name.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.3</h2>

    <ul>
      <li>Added help link to procedures.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.2</h2>

    <ul>
      <li>Updated Help Page.</li>
    </ul>

    <h2>@PLUGIN_KEY@-2.0.1</h2>

    <ul>
      <li>Added new Parameter Panels.</li>
    </ul>
  </div>
</body>
</html>
